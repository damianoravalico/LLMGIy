<predefined> ::= <IMPORTS>"def evolve("<var>"):{:"<NEWLINE><code>":}"

<NEWLINE> ::= "#"
<var> ::= "v0" | "v1" | "v2" | "v3" | "v4" | "v5" | "v6"

<code> ::= <statement> | <code><statement> | <statement> 
<statement> ::= <stmt_list><NEWLINE> | <compound_stmt> | <stmt_list><NEWLINE> | <compound_stmt> | <stmt_list><NEWLINE>
<compound_stmt> ::= <for>
<stmt_list> ::= <assign> | <return> | <update_var>

<return> ::= "return "<var> | "return ''.join("<var>")"

<assign> ::= <var>" = ''" | <var>" = "<var> | <var>" = []" |  <var>" = "<split> | <var>" = ["<list>"]" | <var>"["<var>"] = "<var>"["<var>"].capitalize()" | <var>" += ''.join("<var>")" |  <var>"["<num>"] = "<var>"["<num>"].capitalize()" | <var>" = "<sum> | <var>" = ''.join("<var>").replace(' ', '')" | <var>" += "<var>".capitalize()" | <var>" = "<common>

<split> ::= <var>".split("<string>")" | <var>".split()" | "re.split('"<string>", "<var>")" | "re.split("<string>", "<var>")" | <var>"["<var>"].split("<string>")"

<list> ::= <common> | <var>".capitalize() for "<var>" in "<var> | <var>"["<num>"]" | <var>".title() "<common> | <var>".capitalize() "<common>

<sum> ::= <common>" + ''.join(("<var>".title() "<common>"))" | "["<list>"] + ["<list>"]"

<for> ::= "for "<var>" in "<var>":{:"<NEWLINE><code>":}" | <common>":{:"<NEWLINE><code>":}" | "for "<var>" in range("<num>", len("<var>")):{:"<NEWLINE><code>":}" | "for "<var>" in range(len("<var>")):{:"<NEWLINE><code>":}"

<update_var> ::= <var>".append("<var>".capitalize())" | <var>".append("<var>")" | <var>".append("<var>".title())"

<common> ::= <var>"["<num>"].lower()" | "for "<var>" in "<var>"["<num>"]"

<num> ::= "0" | "1" | "1:"

<string> ::= "'-'" | "'[-\\\\s]+'" | "'[-\\\\s]'" | "' '" | "'-| '"
<FUNC> ::= "range" | "range" 
<var> ::= "v0" | "v1" | "v2" | "v3" | "v4" | "v5" | "v6" | "v0" | "v1" | "v2" | "v3" | "v4" 
