<predefined> ::= "def evolve("<var>"):{:"<NEWLINE><code>":}"

<NEWLINE> ::= "#"
<var> ::= "v0" | "v1" | "v2" | "v3" | "v4" | "v5" | "v6"

<code> ::= <statement> | <code><statement> | <statement> 
<statement> ::= <stmt_list><NEWLINE> | <compound_stmt> | <stmt_list><NEWLINE> | <compound_stmt> | <stmt_list><NEWLINE>
<compound_stmt> ::= <for>
<stmt_list> ::= <assign> | <return> | <update_var>

<assign> ::= <var>" = ''" | <var>" = "<var> | <var>" = "<var>".split('-')" | <var>" = ["<var>"[0].lower()]" | <var>" = []" | <var>" = "<var>".split()" | <var>" = "<var>"[0].lower() + ''.join(("<var>".title() for "<var>" in "<var>"[1:]))" | <var>" = ["<var>".capitalize() for "<var>" in "<var>"]" | <var>" = ["<var>"[0]] + ["<var>".title() for "<var>" in "<var>"[1:]]" | <var>"["<var>"] = "<var>"["<var>"].capitalize()" | <var>" = ''.join("<var>").replace(' ', '')" | <var>" = re.split('-| ', "<var>")" | <var>" += "<var>".capitalize()" | <var>" = "<var>"[0].lower()" | <var>" = re.split('[-\\\\s]+', "<var>")" | <var>" = ["<var>"[0].lower()] + ["<var>".capitalize() for "<var>" in "<var>"[1:]]" |  <var>" = re.split('[-\\\\s]', "<var>")" | <var>" += ''.join("<var>")" | <var>"[0] = "<var>"[0].capitalize()" | <var>" = "<var>"["<var>"].split('-')" | <var>" = "<var>".split(' ')"

<return> ::= "return "<var> | "return ''.join("<var>")"

<for> ::= "for "<var>" in "<var>":{:"<NEWLINE><code>":}" | "for "<var>" in "<var>"[1:]:{:"<NEWLINE><code>":}" | "for "<var>" in range(1, len("<var>")):{:"<NEWLINE><code>":}" | "for "<var>" in range(len("<var>")):{:"<NEWLINE><code>":}"

<update_var> ::= <var>".append("<var>".capitalize())" | <var>".append("<var>")" | <var>".append("<var>".title())"